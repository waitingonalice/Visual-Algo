{"version":3,"sources":["SortingAlgorithms/mergeSortAlgo.js","SortingAlgorithms/quickSortAlgo.js","components/Button.jsx","components/DropDownMenu.jsx","components/Modal.jsx","components/SortingVisual.jsx","SortingAlgorithms/bubbleSortAlgo.js","SortingAlgorithms/insertionSortAlgo.js","App.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","supportArray","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","mergeSort","quickSort","low","high","pi","partition","pivot","temp","GenerateButton","props","myClass","type","className","onClick","handleClick","colorScheme","size","leftIcon","disabled","children","SortDropDownMenu","as","Button","rightIcon","HelpModal","useDisclosure","isOpen","onOpen","onClose","variant","isCentered","mt","mb","fontWeight","fontSize","justifyContent","AlgoModal","useState","index","setIndex","algoList","title","description","hasPrev","hasNext","algoDesc","pb","spacing","primaryColor","secondaryColor","SortingVisual","randomArray","setArray","useEffect","window","addEventListener","handleReset","console","log","handleBubbleSort","start","sorted","round","comparingElement","bubbleSort","getBubbleSortAnimations","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","handleInsertionSort","container","insertionSort","getInsertionSortAnimations","handleQuickSort","getQuickSortAnimations","refreshPage","handleMergeSort","map","value","idx","location","reload","min","max","innerWidth","innerHeight","random","App","useColorMode","colorMode","toggleColorMode","ColorMode","icon","isRound","float","id","href","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca0d885d.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const supportArray = [...array];\r\n    mergeSortHelper(array, 0, array.length-1, supportArray, animations);\r\n    return animations; \r\n}\r\n\r\n//swaps mainArray with supportArray during merge sort\r\nfunction mergeSortHelper(mainArray, startIdx, endIdx, supportArray, animations){\r\n    if(startIdx===endIdx){\r\n        return;\r\n    }\r\n    const middleIdx = Math.floor((startIdx+endIdx)/2);\r\n    mergeSortHelper(supportArray, startIdx, middleIdx, mainArray, animations); \r\n    //swaps first half of mainArray with supportArray\r\n    mergeSortHelper(supportArray, middleIdx+1, endIdx, mainArray, animations); \r\n    //swaps second half of mainArray with SupportArray\r\n    mergeSort(mainArray,startIdx,middleIdx,endIdx,supportArray,animations);\r\n}\r\n\r\nfunction mergeSort(mainArray,startIdx,middleIdx,endIdx,supportArray,animations){\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n\r\n    //operation 1\r\n    while(i <= middleIdx && j <=endIdx){\r\n        animations.push([i,j]); //push index i and j into animations array once to change color \r\n        animations.push([i,j]); //push index i and j into animations array a second time to revert color\r\n        if(supportArray[i]<=supportArray[j]){\r\n            animations.push([k,supportArray[i]]);\r\n            mainArray[k++] = supportArray[i++];\r\n            //swap then increment to the next index\r\n        }else{\r\n            animations.push([k,supportArray[j]]);\r\n            mainArray[k++] = supportArray[j++];\r\n        }\r\n    }\r\n    //operation 2\r\n    while(i<=middleIdx){\r\n        animations.push([i,i]);\r\n        animations.push([i,i]);\r\n        animations.push([k,supportArray[i]]);\r\n        mainArray[k++] = supportArray[i++];\r\n    }\r\n    //operation 3\r\n    while(j<=endIdx){\r\n        animations.push([j,j]);\r\n        animations.push([j,j]);\r\n        animations.push([k,supportArray[j]]);\r\n        mainArray[k++] = supportArray[j++];\r\n    }\r\n}\r\n  ","export function getQuickSortAnimations(array){\r\n    const animations =[];\r\n    if(array.length <=1){\r\n        return array;\r\n    }\r\n    const supportArray = [...array]//clones array;\r\n    quickSort(0, array.length-1, supportArray, animations);\r\n    return animations;\r\n}\r\n\r\n//do quicksort with recursion \r\nconst quickSort = (low, high, array, animations) => {\r\n    if (low < high) {\r\n        let pi = partition(low, high , array, animations);\r\n        quickSort(low, pi - 1, array, animations);\r\n        quickSort(pi + 1, high, array, animations); \r\n    }\r\n}\r\n\r\nconst partition = (low, high, array, animations) => {\r\n    let i = low, pivot = array[high], j = low;\r\n    //at each iteration of j,\r\n    //swap j with i if j < pivot value, separating values smaller and larger than pivot\r\n    \r\n    for (j; j < array[high - 1]; j++) {\r\n        if (array[j] < pivot) {\r\n            animations.push([i, j, true]);\r\n            animations.push([i, j, true]);\r\n            animations.push([j, i, true]);\r\n            animations.push([j, i, true]);\r\n            animations.push([i, array[j]]);\r\n            animations.push([j, array[i]]);\r\n            let temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n            i++;\r\n        }\r\n    }\r\n\r\n    //main partition -- once j reaches array[high -1], swap pivot to value[i];\r\n    animations.push([i, high, true]);\r\n    animations.push([i, high, true]);\r\n    animations.push([high, i, true]);\r\n    animations.push([high, i, true]);\r\n    animations.push([i, array[high]]);\r\n    animations.push([high, array[i]]);\r\n    let temp = array[i];\r\n    array[i] = array[high];\r\n    array[high] = temp;\r\n    return i; \r\n}\r\n","import React from \"react\";\r\nimport { Button } from '@chakra-ui/react';\r\n\r\nexport function GenerateButton(props) {\r\n    const myClass = `button ${props.type}`\r\n    return (\r\n        <Button\r\n            className={myClass}\r\n            onClick={props.handleClick}\r\n            colorScheme='gray' size='sm'\r\n            leftIcon={props.leftIcon}\r\n            disabled = {props.disabled}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n        ); \r\n}","import React from 'react';\r\nimport { Menu, MenuButton, MenuList, Button } from '@chakra-ui/react';\r\nimport { ChevronDownIcon } from '@chakra-ui/icons';\r\n\r\nexport function SortDropDownMenu(props) {\r\n    return (\r\n         <Menu>\r\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />} colorScheme = 'gray' size = {'sm'}>\r\n                Algorithms\r\n            </MenuButton>\r\n            <MenuList>\r\n                {props.children}\r\n            </MenuList>\r\n        </Menu>\r\n    )\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Modal, ModalOverlay, ModalCloseButton, ModalContent, ModalFooter, ModalBody, ModalHeader, HStack, Heading } from '@chakra-ui/react'\r\nimport { Button, Text, Box } from '@chakra-ui/react'\r\nimport { GenerateButton } from './Button'\r\nimport { useDisclosure } from '@chakra-ui/react'\r\nimport { IoMdHelp } from 'react-icons/io'\r\nimport {FaRegLightbulb} from \"react-icons/fa\"\r\n\r\nexport function HelpModal() {\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button leftIcon={<IoMdHelp />} colorScheme='gray' size='sm' variant='solid' onClick={onOpen}>\r\n\t\t\t\tHelp\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n\t\t\t\t<ModalOverlay />\r\n\t\t\t\t<ModalContent>\r\n\t\t\t\t\t<ModalCloseButton />\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Box mt={\"1rem\"} mb={'0.5rem'}>\r\n\t\t\t\t\t\t\t<Text fontWeight={'bold'} fontSize=\"20\">Visual Algo Introduction</Text>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t \r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tVisual Algo is an interactive web application that enables learners to interact with algorithms through visual animations instead of just reading about them. \r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Text fontWeight={\"bold\"} fontSize={20} mb = '0.5rem'>Site Guide</Text>\r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tGenerate New Array \r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tRandomly generates new dataset.                                                                                                                                                                                  \r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tReload Page\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tRefreshes the page to stop the algorithm from running.\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tSorting Algorithms\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tShows a list of sorting algorithms, pressing any algorithm in the list will trigger the algorithm to start running.\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tAlgorithm tips\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tProvides a brief description of how every algorithm functions and its uses.\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tTest Your Knowledge\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tRedirects to quiz page.\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter justifyContent={'center'}>\r\n\t\t\t\t\t\t<GenerateButton myClass = 'closeBtn' handleClick={onClose}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</GenerateButton>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</ModalContent>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t \r\n\t)\r\n}\r\n\r\nexport function AlgoModal() {\r\n\tconst [index, setIndex] = useState(0)\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\r\n\tconst algoList = [\r\n\t\t{\r\n\t\t\ttitle: 'Merge Sort',\r\n\t\t\tdescription: 'TBC'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Quick Sort',\r\n\t\t\tdescription: 'TBC'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Bubble sort',\r\n\t\t\tdescription: 'TBC'\r\n\t\t\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Insertion sort',\r\n\t\t\tdescription: 'TBC'\r\n\t\t}\r\n\t]\r\n\tlet hasPrev = index > 0\r\n\tlet hasNext = index < algoList.length-1\r\n\t\t\r\n\tfunction handleNextClick() {\r\n\t\tif (hasNext) {\r\n\t\t\tsetIndex(index + 1) \r\n\t\t}\r\n\t}\r\n\tfunction handlePrevClick() {\r\n\t\tif (hasPrev) {\r\n\t\t\tsetIndex(index-1)\r\n\t\t}\r\n\t}\r\n\tlet algoDesc = algoList[index]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GenerateButton myClass='algoHelp' handleClick={onOpen} leftIcon = {<FaRegLightbulb/>}> Algorithm tips </GenerateButton>\r\n\r\n\t\t\t<Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n\t\t\t\t<ModalOverlay />\r\n\t\t\t\t<ModalContent>\r\n\t\t\t\t\t<ModalCloseButton/>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<ModalHeader>\r\n\t\t\t\t\t\t\t{algoDesc.title}\r\n\t\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t\t<Heading pb={3} fontSize= {16}>\r\n\t\t\t\t\t\t\tDescription {index + 1} of {algoList.length}\r\n\t\t\t\t\t\t</Heading>\r\n\t\t\t\t\t\t<Text>{algoDesc.description}</Text>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<HStack spacing = '10px'>\r\n\t\t\t\t\t\t\t<GenerateButton myClass='closeBtn' handleClick={onClose} >Close</GenerateButton>\r\n\t\t\t\t\t\t\t<GenerateButton myClass = 'prevBtn' handleClick ={handlePrevClick} disabled={!hasPrev}>Previous</GenerateButton>\r\n\t\t\t\t\t\t\t<GenerateButton myClass='nextBtn' handleClick={handleNextClick} disabled = {!hasNext}>Next</GenerateButton>\r\n\t\t\t\t\t\t</HStack>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</ModalContent>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t\t\t\r\n\t);\r\n\r\n}\r\n","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { getMergeSortAnimations } from '../SortingAlgorithms/mergeSortAlgo.js';\r\nimport { getBubbleSortAnimations } from '../SortingAlgorithms/bubbleSortAlgo';\r\nimport { getInsertionSortAnimations } from '../SortingAlgorithms/insertionSortAlgo';\r\nimport { getQuickSortAnimations } from '../SortingAlgorithms/quickSortAlgo';\r\nimport { MenuItem, VStack } from '@chakra-ui/react';\r\nimport { GenerateButton } from './Button.jsx';\r\nimport { SortDropDownMenu } from './DropDownMenu.jsx';\r\nimport { AlgoModal } from './Modal.jsx';\r\nimport { MdQuiz } from \"react-icons/md\"\r\n\r\nconst animationSpeedMs = 7;\r\nconst primaryColor = \"CornflowerBlue\";\r\nconst secondaryColor = \"Aquamarine\";\r\n\r\nexport function SortingVisual() {\r\n    const [array, setArray] = useState(randomArray());\r\n\r\n    //function that controls size of array based on window event listener\r\n    //effect invokes handleResize() function\r\n    // useEffect(() => {\r\n    //     function handleResize() {\r\n    //         const numBars = array\r\n    //         if (window.innerWidth/20<=numBars.length-1) {\r\n    //             numBars.pop();\r\n    //             setArray([...numBars])\r\n                \r\n    //         } else if (window.innerWidth / 20 >= numBars.length - 1) {\r\n    //             numBars.push(randomIntFromInterval(10, window.innerHeight / 2))\r\n    //             setArray([...numBars])\r\n    //         }\r\n    //     }\r\n    //     window.addEventListener('resize', handleResize)\r\n    //     return () => window.removeEventListener(\"resize\", handleResize)\r\n    // }, [])\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            handleReset();\r\n        })\r\n    },[])\r\n\r\n    \r\n    const handleReset = () => {\r\n        console.log('reset')\r\n        setArray(randomArray());\r\n    }\r\n    \r\n\r\n    const handleMergeSort = () => {\r\n        const animations = getMergeSortAnimations(array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeedMs);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeedMs);\r\n            }\r\n        }\r\n    }\r\n    const handleBubbleSort = () => {\r\n        const animations = getBubbleSortAnimations(array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][2];\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 2 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeedMs);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeedMs);\r\n            }\r\n        }\r\n    }\r\n        \r\n    const handleInsertionSort = () => {\r\n        const animations = getInsertionSortAnimations(array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][2];\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 2 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeedMs);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeedMs);\r\n            }\r\n        }\r\n    }\r\n                \r\n    const handleQuickSort = () => {\r\n        const animations = getQuickSortAnimations(array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][2];\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? primaryColor : secondaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeedMs);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeedMs);\r\n            }\r\n        }\r\n    }     \r\n    \r\n\r\n    return(\r\n        <div className='parent-container'>\r\n            <VStack>\r\n                <div className='feature-buttons'>\r\n                    <GenerateButton myClass =\"resetArray\" handleClick = {()=>refreshPage()}>Reload Page</GenerateButton>\r\n                    <GenerateButton myClass =\"generateNewArray\" handleClick = {()=>handleReset()}>Generate New Array</GenerateButton>\r\n                    \r\n                    <SortDropDownMenu>\r\n                        <MenuItem onClick={() => handleMergeSort()}> Merge Sort</MenuItem>\r\n                        <MenuItem onClick = {() => handleQuickSort()}>Quick Sort</MenuItem>\r\n                        <MenuItem onClick = {() => handleInsertionSort()}>Insertion Sort</MenuItem>\r\n                        <MenuItem onClick = {() => handleBubbleSort()}>Bubble Sort</MenuItem>\r\n                    </SortDropDownMenu>\r\n                    <AlgoModal />\r\n                    <GenerateButton leftIcon = {<MdQuiz/>}>Test Your Knowledge</GenerateButton>\r\n                </div>\r\n\r\n                <div className='array-container'>\r\n                    {array.map((value, idx) => (\r\n                        <div className=\"array-bar\" \r\n                            key={idx}\r\n                            style={{backgroundColor: primaryColor, height: `${value}px`}}> \r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </VStack>\r\n        </div>\r\n    )\r\n}\r\nconst refreshPage = () => {\r\n    window.location.reload(true);\r\n}\r\n\r\nconst randomArray = () => {\r\n    const array = [];\r\n    for(let i = 0; i<(window.innerWidth)/16; i++){\r\n        array.push(randomIntFromInterval(10,window.innerHeight/2));\r\n    }\r\n    return array;\r\n}\r\n\r\n//FROM: https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min,max) {\r\n    return Math.floor(Math.random()*(max - min + 1)+min); \r\n}\r\n\r\n\r\nexport default SortingVisual;","export function getBubbleSortAnimations(array){\r\n    const animations =[];\r\n    if(array.length <=1){\r\n        return array;\r\n    }\r\n    const supportArray = [...array]//clones array;\r\n    bubbleSort(0,supportArray,animations);\r\n    return animations;\r\n}\r\n\r\n//1. create array to hold values\r\n//2. while the array isnt sorted, iterate through array\r\n//3. if the value of index i > i+1, swap\r\n\r\nfunction bubbleSort(start,array,animations){\r\n    let i = start;\r\n    let j = array.length-1;\r\n    let sorted = false;\r\n    let round = 0;\r\n    while(!sorted){\r\n        sorted = true;\r\n        for(let comparingElement = i; comparingElement < j-round; comparingElement++){\r\n            animations.push([comparingElement, comparingElement + 1, true]); \r\n            animations.push([comparingElement, comparingElement + 1, true]); \r\n            \r\n            if(array[comparingElement]>array[comparingElement+1]){\r\n                animations.push([comparingElement, array[comparingElement + 1]]);\r\n                animations.push([comparingElement + 1, array[comparingElement]]);\r\n                \r\n                let temp = array[comparingElement];\r\n                array[comparingElement] = array[comparingElement + 1];\r\n                array[comparingElement + 1] = temp;\r\n                sorted = false;  \r\n            }   \r\n            \r\n        }\r\n        round++;\r\n    }    \r\n}","export function getInsertionSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const supportArray = [...array]; //clones array\r\n    insertionSort(supportArray,animations);\r\n    return animations;\r\n}\r\n// }\r\n//1. iterate from arr[1] to arr [n] over the array\r\n//2. compare current element (key) to its predecessor \r\n//3. if key element is small than its predecessor, compare it to the elements before\r\n//4. move greater one position up to make space for swapped element. \r\n\r\nfunction insertionSort(array,animations){\r\n\r\n    for(let i = 1;i<array.length;i++){\r\n        let temp = array[i];\r\n        let container = i;\r\n        animations.push([container, container - 1,true]);\r\n        animations.push([container, container - 1, true]);\r\n        \r\n        while(container > 0 && array[container - 1] > temp){\r\n            animations.push([container, container - 1,true]);\r\n            animations.push([container, container - 1,true]);\r\n            animations.push([container, array[container -1]]);\r\n            animations.push([container, array[container - 1]]);\r\n            \r\n            array[container] = array[container-1];\r\n            container--;\r\n            \r\n        }\r\n        animations.push([container, temp]);\r\n        animations.push([container, temp]);\r\n        \r\n        array[container] = temp;\r\n    }\r\n\r\n} \r\n\r\n","import React from 'react';\nimport \"./app.css\"\nimport { SortingVisual } from './components/SortingVisual';\nimport { Heading, IconButton, useColorMode, Center} from '@chakra-ui/react'\nimport { FaSun, FaMoon } from 'react-icons/fa'\nimport { HelpModal } from './components/Modal'\nimport {BsGithub} from 'react-icons/bs'\n\nexport default function App() {\n\tconst { colorMode, toggleColorMode } = useColorMode();\n\t\n\tfunction ColorMode() {\n\t\treturn (\n\t\t\t <IconButton\n\t\t\t\t\ticon={colorMode === 'light' ? <FaSun /> : <FaMoon />}\n\t\t\t\t\tisRound='true'\n\t\t\t\t\tsize='md'\n\t\t\t\t\tonClick={toggleColorMode}\n\t\t\t\t\tfloat={\"right\"}\n\t\t\t\t/>\n\t\t);\n\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \n\treturn (\n\t\t<div className='main'>\n\t\t\t<div className='header'>\n\t\t\t\t<HelpModal/>\n\t\t\t\t<ColorMode />\n\t\t\t</div>\n\t\t\t<div className='body'>\n\t\t\t\t<Heading className='title'>\n\t\t\t\t\tVisual Algo\n\t\t\t\t</Heading>\n\t\t\t\t<SortingVisual />\n\t\t\t</div>\n\t\t\t<Center className='footer'>\n\t\t\t\t<div className='links'>\n\t\t\t\t\tLinks:\n\t\t\t\t\t<a id = 'github-link' href='https://github.com/waitingonalice/VisualAlgo'>\n\t\t\t\t\t\tGithub\n\t\t\t\t\t\t<div id='gh-icon'><BsGithub size={20} /></div> \n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</Center>\n\t\t</div>\t\t \n\t);\n}\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider, ColorModeScript, extendTheme } from \"@chakra-ui/react\"\nimport react from 'react';\n\nconst config = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n}\n\nconst theme = extendTheme({\n  config,\n});\n\nReactDOM.render(\n  <react.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode}/>\n      <App />\n    </ChakraProvider>\n  </react.StrictMode>\n  ,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}