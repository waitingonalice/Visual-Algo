{"version":3,"sources":["Pages/ErrorPage.jsx","components/ErrorMessage.js","components/Button.jsx","Pages/Test.jsx","Data/data.js","Pages/Quiz.jsx","SortingAlgorithms/mergeSortAlgo.js","SortingAlgorithms/quickSortAlgo.js","components/DropDownMenu.jsx","components/Modal.jsx","Pages/SortingVisual.jsx","SortingAlgorithms/bubbleSortAlgo.js","SortingAlgorithms/insertionSortAlgo.js","App.js","index.js"],"names":["ErrorPage","ErrorMessage","children","style","width","padding","marginBottom","borderRadius","backgroundColor","textAlign","color","textTransform","GenerateButton","props","myClass","type","className","onClick","handleClick","colorScheme","size","leftIcon","disabled","QuizButton","Test","question","name","setQuestion","score","setScore","useState","currentQuestion","setCurrentQuestion","options","setOptions","error","setError","selected","setSelected","navigate","useNavigate","useEffect","correct_answer","incorrect_answers","console","log","to","category","map","idx","handleCheckAns","isIndeterminate","Categories","value","categories","Quiz","setName","fetchQuestions","setCategory","difficulty","setDifficulty","placeholder","onChange","e","target","cat","getMergeSortAnimations","array","animations","length","supportArray","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","mergeSort","quickSort","low","high","pi","partition","pivot","temp","SortDropDownMenu","as","Button","rightIcon","HelpModal","useDisclosure","isOpen","onOpen","onClose","React","scrollBehavior","variant","isCentered","mt","mb","fontWeight","fontSize","justifyContent","AlgoModal","index","setIndex","algoList","title","description","hasPrev","hasNext","algoDesc","pb","spacing","primaryColor","secondaryColor","refreshPage","window","location","reload","randomArray","min","max","innerWidth","innerHeight","random","SortingVisual","setArray","addEventListener","handleReset","handleBubbleSort","start","sorted","round","comparingElement","bubbleSort","getBubbleSortAnimations","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","setTimeout","newHeight","height","handleInsertionSort","container","insertionSort","getInsertionSortAnimations","handleQuickSort","getQuickSortAnimations","handleMergeSort","App","useColorMode","colorMode","toggleColorMode","ColorMode","icon","isRound","float","a","axios","get","data","results","path","element","id","href","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f76b34f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div>ERROR! Page not found!</div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage","import React from 'react'\r\n\r\nfunction ErrorMessage({children}) {\r\n  return (\r\n      <div style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            marginBottom: 10,\r\n            borderRadius: 4,\r\n            backgroundColor: \"orangered\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            textTransform: \"capitalize\",\r\n        }}>\r\n          {children}\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import React from \"react\";\r\nimport { Button } from '@chakra-ui/react';\r\nimport './Button.css'\r\nexport function GenerateButton(props) {\r\n    const myClass = `button ${props.type}`\r\n    return (\r\n        <Button\r\n            className={myClass}\r\n            onClick={props.handleClick}\r\n            colorScheme='gray' size='sm'\r\n            leftIcon={props.leftIcon}\r\n            disabled = {props.disabled}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n        ); \r\n}\r\n\r\nexport function QuizButton({children,handleClick}) {\r\n    return (\r\n        <button onClick={handleClick} className=\"quiz-button\" type ='button'>\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React, { useEffect,useState } from 'react'\r\nimport './test.css'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport { CircularProgress, Center } from '@chakra-ui/react'\r\nimport { GenerateButton, QuizButton } from '../components/Button'\r\nimport {useNavigate, Link} from 'react-router-dom'\r\n\r\nconst Test = ({ question, setQuestion, name, score = 0, setScore }) => {\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [options, setOptions] = useState();\r\n    const [error, setError] = useState(false)\r\n    const [selected, setSelected] = useState()\r\n    let navigate = useNavigate();\r\n\r\n    //for every question, fetch its options\r\n    useEffect(() => {\r\n        setOptions(question &&\r\n            [question[currentQuestion]?.correct_answer,\r\n            ...question[currentQuestion]?.incorrect_answers,]);\r\n    }, [currentQuestion, question])\r\n    \r\n    function handleSelect() {\r\n        \r\n    }\r\n\r\n    function handleCheckAns(idx) {\r\n        setSelected(idx);\r\n        if (idx === question[currentQuestion].correct_answer) {\r\n            setScore(score + 1);\r\n            \r\n        }\r\n        setError(false)\r\n    }\r\n\r\n    function handleNextClick() {\r\n        if (currentQuestion > 8) {\r\n           navigate('/results')\r\n        } else if (selected) {\r\n            setCurrentQuestion(currentQuestion + 1)\r\n            setSelected();\r\n        } else {\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    function handleQuit() {\r\n        setQuestion();\r\n        \r\n    }\r\n\r\n    console.log(question)\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Link to='/quiz'>\r\n                <div className='quiz-title'>Visual Algo Quiz</div>\r\n            </Link>\r\n            <div className='test-page'>\r\n                <Center>\r\n                    <div className='username'>\r\n                        Welcome, {name}\r\n                    </div>\r\n                </Center>\r\n\r\n                <Center>\r\n                    <div className='questions-container'>\r\n                        {question ?\r\n                            <>\r\n                                <div className='quiz-category'>\r\n                                    {question[currentQuestion]?.category}\r\n                                    <div>\r\n                                        Question: {currentQuestion + 1}\r\n                                    </div>\r\n                                </div>\r\n                                    {question[currentQuestion]?.question}\r\n                                <div className='options'>\r\n                                    {options &&\r\n                                        options.map((idx) => (\r\n                                            <QuizButton key ={idx} handleClick = {()=>handleCheckAns(idx)}>\r\n                                                {idx}\r\n                                            </QuizButton>\r\n                                    ))}\r\n                                    {error && <ErrorMessage> Please choose an option </ErrorMessage>}\r\n                                </div>\r\n                                <div className='next-button'>\r\n                                    <GenerateButton handleClick={handleNextClick}>Next</GenerateButton>\r\n                                </div>\r\n                                \r\n                            </>                         \r\n                            :\r\n                        <div className='circular'><CircularProgress isIndeterminate color='blue.300' size='120px' /></div> \r\n                        }\r\n                    </div>\r\n                </Center>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test","const Categories = [\r\n    { value: 18, categories: 'Computer Science' },\r\n\r\n]\r\n\r\n\r\n\r\nexport default Categories","import React, { useState } from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport { GenerateButton } from '../components/Button';\r\nimport { FaHome } from 'react-icons/fa';\r\nimport { Input, VStack,Select, Center, Heading} from '@chakra-ui/react';\r\nimport './quiz.css'\r\nimport Categories from '../Data/data.js'\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nfunction Quiz({name,setName,fetchQuestions}) {\r\n    const [category, setCategory] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const [difficulty, setDifficulty] = useState(\"\")\r\n    let navigate = useNavigate();\r\n\r\n    const handleSubmit = () => {\r\n        if (!name || !category || !difficulty) {\r\n            setError(true);\r\n            return;\r\n        } else {\r\n            setError(false);\r\n            fetchQuestions(category, difficulty);\r\n            navigate('/test');\r\n         }\r\n     }\r\n     \r\n    return (\r\n        \r\n        <div className='parent-quiz-container'>\r\n            <div className='quiz-title'>Visual Algo Quiz</div>\r\n            <Center>\r\n                <div className='select-settings-card'>\r\n                    \r\n                    <VStack> \r\n                        <Input className='input' placeholder='Enter Your Name' onChange={(e) => setName(e.target.value)}/>\r\n                 \r\n                        <Select placeholder='Select Topic' onChange={(e) => setCategory(e.target.value)}> \r\n                            {Categories.map((cat) => { \r\n                                return <option key={cat.categories} value={cat.value}>\r\n                                    {cat.categories}\r\n                                </option>\r\n                            }) \r\n                        }\r\n                        </Select> \r\n                        <Select placeholder='Select Difficulty' onChange = {(e) => setDifficulty(e.target.value)}>\r\n                            <option key='Easy' value='easy' > Easy </option>\r\n                            <option key='Medium' value='medium' > Medium </option>\r\n                            <option key='Hard' value='hard' > Hard </option>\r\n                        </Select>\r\n\r\n                        {error && <ErrorMessage>Fill in all relevant fields</ErrorMessage>}\r\n\r\n                        <div className='buttons'>\r\n                            <GenerateButton leftIcon={<FaHome />} handleClick={() => navigate('/VisualAlgo')}>\r\n                                Back to home page\r\n                            </GenerateButton>\r\n                            <GenerateButton handleClick={() => {handleSubmit()}}>\r\n                                Proceed\r\n                            </GenerateButton>\r\n                        </div>\r\n                    </VStack>\r\n                </div>\r\n            </Center>\r\n             \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Quiz","export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const supportArray = [...array];\r\n    mergeSortHelper(array, 0, array.length-1, supportArray, animations);\r\n    return animations; \r\n}\r\n\r\n//swaps mainArray with supportArray during merge sort\r\nfunction mergeSortHelper(mainArray, startIdx, endIdx, supportArray, animations){\r\n    if(startIdx===endIdx){\r\n        return;\r\n    }\r\n    const middleIdx = Math.floor((startIdx+endIdx)/2);\r\n    mergeSortHelper(supportArray, startIdx, middleIdx, mainArray, animations); \r\n    //swaps first half of mainArray with supportArray\r\n    mergeSortHelper(supportArray, middleIdx+1, endIdx, mainArray, animations); \r\n    //swaps second half of mainArray with SupportArray\r\n    mergeSort(mainArray,startIdx,middleIdx,endIdx,supportArray,animations);\r\n}\r\n\r\nfunction mergeSort(mainArray,startIdx,middleIdx,endIdx,supportArray,animations){\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n\r\n    //operation 1\r\n    while(i <= middleIdx && j <=endIdx){\r\n        animations.push([i,j]); //push index i and j into animations array once to change color \r\n        animations.push([i,j]); //push index i and j into animations array a second time to revert color\r\n        if(supportArray[i]<=supportArray[j]){\r\n            animations.push([k,supportArray[i]]);\r\n            mainArray[k++] = supportArray[i++];\r\n            //swap then increment to the next index\r\n        }else{\r\n            animations.push([k,supportArray[j]]);\r\n            mainArray[k++] = supportArray[j++];\r\n        }\r\n    }\r\n    //operation 2\r\n    while(i<=middleIdx){\r\n        animations.push([i,i]);\r\n        animations.push([i,i]);\r\n        animations.push([k,supportArray[i]]);\r\n        mainArray[k++] = supportArray[i++];\r\n    }\r\n    //operation 3\r\n    while(j<=endIdx){\r\n        animations.push([j,j]);\r\n        animations.push([j,j]);\r\n        animations.push([k,supportArray[j]]);\r\n        mainArray[k++] = supportArray[j++];\r\n    }\r\n}\r\n  ","export function getQuickSortAnimations(array){\r\n    const animations =[];\r\n    if(array.length <=1){\r\n        return array;\r\n    }\r\n    const supportArray = [...array]//clones array;\r\n    quickSort(0, array.length-1, supportArray, animations);\r\n    return animations;\r\n}\r\n\r\n//do quicksort with recursion \r\nconst quickSort = (low, high, array, animations) => {\r\n    if (low < high) {\r\n        let pi = partition(low, high , array, animations);\r\n        quickSort(low, pi - 1, array, animations);\r\n        quickSort(pi + 1, high, array, animations); \r\n    }\r\n}\r\n\r\nconst partition = (low, high, array, animations) => {\r\n    let i = low, pivot = array[high], j = low;\r\n    //at each iteration of j,\r\n    //swap j with i if j < pivot value, separating values smaller and larger than pivot\r\n    \r\n    for (j; j < array[high - 1]; j++) {\r\n        if (array[j] < pivot) {\r\n            animations.push([i, j, true]);\r\n            animations.push([i, j, true]);\r\n            animations.push([j, i, true]);\r\n            animations.push([j, i, true]);\r\n            animations.push([i, array[j]]);\r\n            animations.push([j, array[i]]);\r\n            let temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n            i++;\r\n        }\r\n    }\r\n\r\n    //main partition -- once j reaches array[high -1], swap pivot to value[i];\r\n    animations.push([i, high, true]);\r\n    animations.push([i, high, true]);\r\n    animations.push([high, i, true]);\r\n    animations.push([high, i, true]);\r\n    animations.push([i, array[high]]);\r\n    animations.push([high, array[i]]);\r\n    let temp = array[i];\r\n    array[i] = array[high];\r\n    array[high] = temp;\r\n    return i; \r\n}\r\n","import React from 'react';\r\nimport { Menu, MenuButton, MenuList, Button } from '@chakra-ui/react';\r\nimport { ChevronDownIcon } from '@chakra-ui/icons';\r\n\r\nexport function SortDropDownMenu(props) {\r\n    return (\r\n         <Menu>\r\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />} colorScheme = 'gray' size = {'sm'}>\r\n                Algorithms\r\n            </MenuButton>\r\n            <MenuList>\r\n                {props.children}\r\n            </MenuList>\r\n        </Menu>\r\n    )\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Modal, ModalOverlay, ModalCloseButton, ModalContent, ModalFooter, ModalBody, ModalHeader, HStack, Heading } from '@chakra-ui/react'\r\nimport { Button, Text, Box } from '@chakra-ui/react'\r\nimport { GenerateButton } from './Button'\r\nimport { useDisclosure } from '@chakra-ui/react'\r\nimport { IoMdHelp } from 'react-icons/io'\r\nimport {FaRegLightbulb} from \"react-icons/fa\"\r\n\r\nexport function HelpModal() {\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\r\n\tconst [scrollBehavior, setScrollBehavior] = React.useState('inside')\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button leftIcon={<IoMdHelp />} colorScheme='gray' size='sm' variant='solid' onClick={onOpen}>\r\n\t\t\t\tHelp\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Modal isOpen={isOpen} onClose={onClose} isCentered scrollBehavior={scrollBehavior}>\r\n\t\t\t\t<ModalOverlay />\r\n\t\t\t\t<ModalContent>\r\n\t\t\t\t\t<ModalCloseButton />\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Box mt={\"1rem\"} mb={'0.5rem'}>\r\n\t\t\t\t\t\t\t<Text fontWeight={'bold'} fontSize=\"20\">Visual Algo Introduction</Text>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t \r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tVisual Algo is an interactive web application that enables learners to interact with algorithms through visual animations instead of just reading about them. \r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Text fontWeight={\"bold\"} fontSize={20} mb = '0.5rem'>Site Guide</Text>\r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tGenerate New Array \r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tRandomly generates new dataset.                                                                                                                                                                                  \r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tReload Page\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tRefreshes the page to stop the algorithm from running.\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tSorting Algorithms\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tShows a list of sorting algorithms, pressing any algorithm in the list will trigger the algorithm to start running.\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tAlgorithm tips\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tProvides a brief description of how every algorithm functions and its uses.\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Text fontWeight='bold'>\r\n\t\t\t\t\t\t\tTest Your Knowledge\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box mb=\"1rem\">\r\n\t\t\t\t\t\t\tRedirects to quiz page.\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter justifyContent={'center'}>\r\n\t\t\t\t\t\t<GenerateButton myClass = 'closeBtn' handleClick={onClose}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</GenerateButton>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</ModalContent>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t \r\n\t)\r\n}\r\n\r\nexport function AlgoModal() {\r\n\tconst [index, setIndex] = useState(0)\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\r\n\tconst [scrollBehavior, setScrollBehavior] = React.useState('inside')\r\n\tconst algoList = [\r\n\t\t{\r\n\t\t\ttitle: 'Merge Sort',\r\n\t\t\tdescription: 'TBC'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Quick Sort',\r\n\t\t\tdescription: 'TBC'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Bubble sort',\r\n\t\t\tdescription: 'TBC'\r\n\t\t\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Insertion sort',\r\n\t\t\tdescription: 'TBC'\r\n\t\t}\r\n\t]\r\n\tlet hasPrev = index > 0\r\n\tlet hasNext = index < algoList.length-1\r\n\t\t\r\n\tfunction handleNextClick() {\r\n\t\tif (hasNext) {\r\n\t\t\tsetIndex(index + 1) \r\n\t\t}\r\n\t}\r\n\tfunction handlePrevClick() {\r\n\t\tif (hasPrev) {\r\n\t\t\tsetIndex(index-1)\r\n\t\t}\r\n\t}\r\n\tlet algoDesc = algoList[index]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GenerateButton myClass='algoHelp' handleClick={onOpen} leftIcon = {<FaRegLightbulb/>}> Algorithm tips </GenerateButton>\r\n\r\n\t\t\t<Modal isOpen={isOpen} onClose={onClose} isCentered scrollBehavior={scrollBehavior}>\r\n\t\t\t\t<ModalOverlay />\r\n\t\t\t\t<ModalContent>\r\n\t\t\t\t\t<ModalCloseButton/>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<ModalHeader>\r\n\t\t\t\t\t\t\t{algoDesc.title}\r\n\t\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t\t<Heading pb={3} fontSize= {16}>\r\n\t\t\t\t\t\t\tDescription {index + 1} of {algoList.length}\r\n\t\t\t\t\t\t</Heading>\r\n\t\t\t\t\t\t<Text>{algoDesc.description}</Text>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<HStack spacing = '10px'>\r\n\t\t\t\t\t\t\t<GenerateButton myClass='closeBtn' handleClick={onClose} >Close</GenerateButton>\r\n\t\t\t\t\t\t\t<GenerateButton myClass = 'prevBtn' handleClick ={handlePrevClick} disabled={!hasPrev}>Previous</GenerateButton>\r\n\t\t\t\t\t\t\t<GenerateButton myClass='nextBtn' handleClick={handleNextClick} disabled = {!hasNext}>Next</GenerateButton>\r\n\t\t\t\t\t\t</HStack>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</ModalContent>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t\t\t\r\n\t);\r\n\r\n}\r\n","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { getMergeSortAnimations } from '../SortingAlgorithms/mergeSortAlgo.js';\r\nimport { getBubbleSortAnimations } from '../SortingAlgorithms/bubbleSortAlgo';\r\nimport { getInsertionSortAnimations } from '../SortingAlgorithms/insertionSortAlgo';\r\nimport { getQuickSortAnimations } from '../SortingAlgorithms/quickSortAlgo';\r\nimport { MenuItem, VStack, Heading } from '@chakra-ui/react';\r\nimport { GenerateButton } from '../components/Button.jsx';\r\nimport { SortDropDownMenu } from '../components/DropDownMenu.jsx';\r\nimport { AlgoModal } from '../components/Modal.jsx';\r\nimport { MdQuiz } from \"react-icons/md\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\n\r\nconst animationSpeedMs = 7;\r\nconst primaryColor = \"CornflowerBlue\";\r\nconst secondaryColor = \"Aquamarine\";\r\n\r\nfunction SortingVisual() {\r\n    const [array, setArray] = useState(randomArray());\r\n\r\n    //function that controls size of array based on window event listener\r\n    //effect invokes handleResize() function\r\n    // useEffect(() => {\r\n    //     function handleResize() {\r\n    //         const numBars = array\r\n    //         if (window.innerWidth/20<=numBars.length-1) {\r\n    //             numBars.pop();\r\n    //             setArray([...numBars])\r\n                \r\n    //         } else if (window.innerWidth / 20 >= numBars.length - 1) {\r\n    //             numBars.push(randomIntFromInterval(10, window.innerHeight / 2))\r\n    //             setArray([...numBars])\r\n    //         }\r\n    //     }\r\n    //     window.addEventListener('resize', handleResize)\r\n    //     return () => window.removeEventListener(\"resize\", handleResize)\r\n    // }, [])\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            handleReset();\r\n        })\r\n    },[])\r\n\r\n    \r\n    const handleReset = () => {\r\n        setArray(randomArray());\r\n    }\r\n    \r\n\r\n    const handleMergeSort = () => {\r\n        const animations = getMergeSortAnimations(array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeedMs);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeedMs);\r\n            }\r\n        }\r\n    }\r\n    const handleBubbleSort = () => {\r\n        const animations = getBubbleSortAnimations(array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][2];\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 2 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeedMs);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeedMs);\r\n            }\r\n        }\r\n    }\r\n        \r\n    const handleInsertionSort = () => {\r\n        const animations = getInsertionSortAnimations(array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][2];\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 2 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeedMs);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeedMs);\r\n            }\r\n        }\r\n    }\r\n                \r\n    const handleQuickSort = () => {\r\n        const animations = getQuickSortAnimations(array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][2];\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? primaryColor : secondaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeedMs);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeedMs);\r\n            }\r\n        }\r\n    }     \r\n    \r\n\r\n    return (\r\n        \r\n        <div className='parent-container'>\r\n            <VStack>\r\n                <div className='title'>\r\n                    Visual Algo\r\n                </div>\r\n                <div className='feature-buttons'>\r\n                    <GenerateButton myClass =\"resetArray\" handleClick = {()=>refreshPage()}>Reload Page</GenerateButton>\r\n                    <GenerateButton myClass =\"generateNewArray\" handleClick = {()=>handleReset()}>Generate New Array</GenerateButton>\r\n                    \r\n                    <SortDropDownMenu>\r\n                        <MenuItem onClick={() => handleMergeSort()}> Merge Sort</MenuItem>\r\n                        <MenuItem onClick = {() => handleQuickSort()}>Quick Sort</MenuItem>\r\n                        <MenuItem onClick = {() => handleInsertionSort()}>Insertion Sort</MenuItem>\r\n                        <MenuItem onClick = {() => handleBubbleSort()}>Bubble Sort</MenuItem>\r\n                    </SortDropDownMenu>\r\n                    <AlgoModal />\r\n                    <Link to ='/quiz'><GenerateButton leftIcon={<MdQuiz />}>Test Your Knowledge</GenerateButton></Link>\r\n                        \r\n                </div>\r\n\r\n                <div className='array-container'>\r\n                    {array.map((value, idx) => (\r\n                        <div className=\"array-bar\" \r\n                            key={idx}\r\n                            style={{backgroundColor: primaryColor, height: `${value}px`}}> \r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </VStack>\r\n        </div>\r\n       \r\n        \r\n    )\r\n}\r\nconst refreshPage = () => {\r\n    window.location.reload(true);\r\n}\r\n\r\nconst randomArray = () => {\r\n    const array = [];\r\n    for(let i = 0; i<(window.innerWidth)/16; i++){\r\n        array.push(randomIntFromInterval(10,window.innerHeight/2));\r\n    }\r\n    return array;\r\n}\r\n\r\n//FROM: https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min,max) {\r\n    return Math.floor(Math.random()*(max - min + 1)+min); \r\n}\r\n\r\n\r\nexport default SortingVisual;","export function getBubbleSortAnimations(array){\r\n    const animations =[];\r\n    if(array.length <=1){\r\n        return array;\r\n    }\r\n    const supportArray = [...array]//clones array;\r\n    bubbleSort(0,supportArray,animations);\r\n    return animations;\r\n}\r\n\r\n//1. create array to hold values\r\n//2. while the array isnt sorted, iterate through array\r\n//3. if the value of index i > i+1, swap\r\n\r\nfunction bubbleSort(start,array,animations){\r\n    let i = start;\r\n    let j = array.length-1;\r\n    let sorted = false;\r\n    let round = 0;\r\n    while(!sorted){\r\n        sorted = true;\r\n        for(let comparingElement = i; comparingElement < j-round; comparingElement++){\r\n            animations.push([comparingElement, comparingElement + 1, true]); \r\n            animations.push([comparingElement, comparingElement + 1, true]); \r\n            \r\n            if(array[comparingElement]>array[comparingElement+1]){\r\n                animations.push([comparingElement, array[comparingElement + 1]]);\r\n                animations.push([comparingElement + 1, array[comparingElement]]);\r\n                \r\n                let temp = array[comparingElement];\r\n                array[comparingElement] = array[comparingElement + 1];\r\n                array[comparingElement + 1] = temp;\r\n                sorted = false;  \r\n            }   \r\n            \r\n        }\r\n        round++;\r\n    }    \r\n}","export function getInsertionSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const supportArray = [...array]; //clones array\r\n    insertionSort(supportArray,animations);\r\n    return animations;\r\n}\r\n// }\r\n//1. iterate from arr[1] to arr [n] over the array\r\n//2. compare current element (key) to its predecessor \r\n//3. if key element is small than its predecessor, compare it to the elements before\r\n//4. move greater one position up to make space for swapped element. \r\n\r\nfunction insertionSort(array,animations){\r\n\r\n    for(let i = 1;i<array.length;i++){\r\n        let temp = array[i];\r\n        let container = i;\r\n        animations.push([container, container - 1,true]);\r\n        animations.push([container, container - 1, true]);\r\n        \r\n        while(container > 0 && array[container - 1] > temp){\r\n            animations.push([container, container - 1,true]);\r\n            animations.push([container, container - 1,true]);\r\n            animations.push([container, array[container -1]]);\r\n            animations.push([container, array[container - 1]]);\r\n            \r\n            array[container] = array[container-1];\r\n            container--;\r\n            \r\n        }\r\n        animations.push([container, temp]);\r\n        animations.push([container, temp]);\r\n        \r\n        array[container] = temp;\r\n    }\r\n\r\n} \r\n\r\n","import React from 'react';\nimport ErrorPage from './Pages/ErrorPage';\nimport Test from './Pages/Test'\nimport Quiz from './Pages/Quiz';\nimport SortingVisual from './Pages/SortingVisual';\nimport \"./app.css\"\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { IconButton, useColorMode, Center} from '@chakra-ui/react'\nimport { FaSun, FaMoon } from 'react-icons/fa'\nimport { HelpModal } from './components/Modal'\nimport {BsGithub} from 'react-icons/bs'\nimport axios from 'axios';\n\n\nexport default function App() {\n\tconst { colorMode, toggleColorMode } = useColorMode();\n\tconst [name, setName] = useState(\"\");\n\tconst [question, setQuestion] = useState();\n\tconst [score, setScore] = useState(0);\n\tfunction ColorMode() {\n\t\treturn (\n\t\t\t <IconButton\n\t\t\t\t\ticon={colorMode === 'light' ? <FaSun /> : <FaMoon />}\n\t\t\t\t\tisRound='true'\n\t\t\t\t\tsize='md'\n\t\t\t\t\tonClick={toggleColorMode}\n\t\t\t\t\tfloat={\"right\"}\n\t\t\t\t/>\n\t\t);\n\t}\n\t//fetch data from open trivia db, and checks if \n\tconst fetchQuestions = async(category=\"\", difficulty=\"\") => {\n\t\tconst { data } = await axios.get(`https://opentdb.com/api.php?amount=10&type=multiple${\n\t\t\t\n\t\t\tcategory && `&category=${category}`\n\t\t\t}${difficulty && `&difficulty=${difficulty}`}`\n\t\t);\n\t\t\n\t\tsetQuestion(data.results)\n\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \n\treturn (\n\t\t<Router>\n\t\t\t<div className='main'>\n\t\t\t\t<div className='header'>\n\t\t\t\t\t<HelpModal/>\n\t\t\t\t\t<ColorMode />\t\n\t\t\t\t</div>\n\t\t\t\t<div className='body'>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path='/VisualAlgo' element={<SortingVisual/>}/>\n\t\t\t\t\t\t<Route path='/quiz' element={\n\t\t\t\t\t\t\t<Quiz\n\t\t\t\t\t\t\t\tname = {name}\n\t\t\t\t\t\t\t\tsetName={setName}\n\t\t\t\t\t\t\t\tfetchQuestions={fetchQuestions} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Route path='/test' element={\n\t\t\t\t\t\t\t<Test\n\t\t\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\t\t\tsetQuestion={setQuestion}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\t\t\tsetScore={setScore} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path='*' element={<ErrorPage/>}/>\n\t\t\t\t\t</Routes>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<Center className='footer'>\n\t\t\t\t\t<div className='links'>\n\t\t\t\t\t\tLinks:\n\t\t\t\t\t\t<a id = 'github-link' href='https://github.com/waitingonalice/VisualAlgo'>\n\t\t\t\t\t\t\tGithub\n\t\t\t\t\t\t\t<div id='gh-icon'><BsGithub size={20} /></div> \n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</Center>\n\t\t\t</div>\t\n\t\t</Router>\t\t \n\t);\n}\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider, ColorModeScript, extendTheme } from \"@chakra-ui/react\"\n\nimport react from 'react';\n\nconst config = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n}\n\nconst theme = extendTheme({\n  config,\n});\n\nReactDOM.render(\n  <react.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <App />\n    </ChakraProvider>\n  </react.StrictMode>\n  ,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}